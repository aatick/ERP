@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutUcasportfolio.cshtml";
}

<style>
    .ui-autocomplete {
        cursor: pointer;
        height: 400px;
        width: 300px;
        overflow-y: scroll;
        background-color: white;
        color: rgb(0,188,212);
        /*outline-style:outset;*/
    }

    .bordercss {
        border: 3px double #CCCCCC;
        color: black;
    }

        .bordercss:focus {
            box-shadow: 0 0 5px rgba(81, 203, 238, 1);
            border: 2px solid rgba(81, 203, 238, 1);
        }

    .required::after {
        content: " *";
        color: red;
    }

    .k-grouping-header {
        background-color: #1ABB9C;
    }
</style>
<script type="text/javascript">

    function GetGLAccountList() {
        var GLAccount = $("#ddlPaymentGLAccountList");
        $.ajax({
            type: 'GET',
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetGLAccountNo", "AccPayment", "http")',
            data: {},
            dataType: 'json',
            async: true,
            success: function (GLViewModeList) {
                GLAccount.html('');
                GLAccount.append($('<option></option>').val("0").html("Please select"));
                $.each(GLViewModeList, function (id, option) {
		    if(option.BranchGLAccountNoMsg.indexOf("101020106")>0){
                    	GLAccount.append($('<option></option>').val(option.BranchGLAccountNoMsg).html(option.AccBankBranchGL));
 		    }
                });
            },
            error: function (request, status, error) {
                alert(request.statusText + "/" + request.statusText + "/" + error);
            }
        });
    }




    function GetBankList() {

        var ddlBankList = $("#ddlBankId");
        $.ajax({
            type: 'GET',
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetBankInfo", "LookupBank", "http")',
            data: {},
            dataType: 'json',
            async: true,
            success: function (BankList) {
                ddlBankList.html('');
                ddlBankList.append($('<option></option>').val("0").html("Please select"));
                $.each(BankList, function (id, option) {
                    ddlBankList.append($('<option></option>').val(option.Id).html(option.BankName));
                });

            },
            error: function (request, status, error) {
                alert(request.statusText + "/" + request.statusText + "/" + error);
            }
        });
    }

    function GetBankBranchList() {
        var ddlBankBranch = $("#ddlBankBranchId");
        var BankId = $("#ddlBankId").val();
        $.ajax({
            type: 'GET',
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetBankBranchList", "InvestorDetail", "http")',
            data: { BankId: BankId },
            dataType: 'json',
            async: true,
            success: function (BankBrach) {
                ddlBankBranch.html('');
                ddlBankBranch.append($('<option></option>').val(" ").html("Please select"));
                $.each(BankBrach, function (id, option) {
                    ddlBankBranch.append($('<option></option>').val(option.Id).html(option.BranchName));
                });
            },
            error: function (request, status, error) {
                alert(request.statusText + "/" + request.statusText + "/" + error);
            }
        });
    }

    function GetPaymentInfoBeforeApprove() {
        var dataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: '@Url.Action("GetPaymentInfoOfNegativeBalanceBeforeApprove", "AccPayment", "http")',
                    dataType: "json",
                    data: {}
                }
            },
            pageSize: 50,
        });
        $("#grid").kendoGrid({
            dataSource: dataSource,
            height: 800,
            groupable: true,
            reorderable: true,
            filterable: true,
            sortable: true,
            resizable: true,
            columnMenu: true,
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5
            },
            columns: [{
                field: "Id",
                hidden: true,
                filterable: false
            },
            {
                field: "rowNumber",
                title: "SL",
                template: "<span class='row-number'></span>",
                width: "5%"
            },

            {
                field: "VoucherNo",
                title: "Voucher No",
            },
            {
                field: "InvestorName",
                title: "Investor Name"

            },
             {
                 field: "TransactionModeName",
                 title: "Transaction Mode",
             },
            {
                field: "ChequeNo",
                title: "Cheque No"

            },
             {
                 field: "ChequeDateMsg",
                 title: "Cheque Date",
             },
            {
                field: "Amount",
                title: "Amount"

            },
            {
                field: "BankName",
                title: "Bank",
            },
            {
                field: "BankBranchName",
                title: "Bank Branch",
                hidden: true

            },
             {
                 field: "TransactionDateMsg",
                 title: "Transaction Date",
             },
            {
                field: "PostDateMsg",
                title: "Post Date",
                hidden: true

            },
            {
                field: "DocRefNo",
                title: "Doc. Ref.No",//
                hidden: true
            },
             {
                 field: "InvestorBrokerBranchName",
                 title: "Investor Broker BranchName",
                 hidden: true

             },
            {
                field: "BrokerBranchName",
                title: "Broker Branch",
                hidden: true

            },
            {
                field: "AccountNo",
                title: "AccountNo",
                hidden: true
            },
            {
                field: "Remarks",
                title: "Remarks",
                hidden: true
            },
            {
                field: "ValuedateMsg",
                title: "Value date",
                hidden: true

            },
             {
                 title: "Action",
                 width: "10%",////Id,VoucherNo,InvestorCode,InvestorName,TransactionMode,ChequeNo, ChequeDateMsg,C.BankName,C.BankBranchName,C.Amount,TransactionDateMsg,PostDateMsg,C.DocRefNo,C.BranchId AS BrokerBranch,C.Remarks,ValuedateMsg
                 template: function (dataItem) {
                     return '<a href="#" title="Edit" onclick="LoadEditData(' + dataItem.Id + ',' + dataItem.InvestorId + ',' + "'" + dataItem.InvestorName + "'" + ',' + "'" + dataItem.TransactionDateMsg + "'" + ',' + "'" + dataItem.TransactionModeId + "'" + ',' + "'" + dataItem.ChequeNo + "'" + ',' + "'" + dataItem.ChequeDateMsg + "'" + ',' + "'" + dataItem.BankId + "'" + ',' + "'" + dataItem.BankBranchId + "'" + ',' + dataItem.Amount + ',' + "'" + dataItem.DocRefNo + "'" + ',' + "'" + dataItem.PostDateMsg + "'" + ',' + dataItem.BrokerBranchId + ',' + "'" + dataItem.Remarks + "'" + ',' + "'" + dataItem.ValuedateMsg + "'" + ',' + "'" + dataItem.AccountNo + "'" + ',' + "'" + dataItem.BranchGLAccount + "'" + ',' + dataItem.IsAccountPayee + ',' + dataItem.CurrentBalance + ',' + "'" + dataItem.InvestorBrokerBranchName + "'" + ',' + dataItem.AccId + ')" class="btn btn-info btn-xs"><i class="fa fa-pencil"></i></a>'; // <a href="#" title="Delete" onclick="Delete(' + dataItem.Id + ')" class="btn btn-danger btn-xs"><i class="fa fa-trash-o"></i>
                 }
             },
            ],
            dataBound: function () {
                var rows = this.items();
                $(rows).each(function () {
                    var index = $(this).index() + 1;
                    var rowLabel = $(this).find(".row-number");
                    $(rowLabel).html(index);
                });
            }
        });
    }

    function GetInvestorbyCode() {
        var code = $('#InvestorCode').val().trim().indexOf("-") > 0 ? $('#InvestorCode').val().trim().split("-")[0].trim() : $('#InvestorCode').val().trim();
        $("#hdnRequisitionId").val(0);
        $.ajax({
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetInvestorByCodeWithRequisitionInfo", "AccPayment", "http")',
            type: "GET",
            dataType: "json",
            async: true,
            data: { InvestorCode: code },
            success: function (data) {


                if (data.Result == "Success") {
                    $.each(data.InvestorList, function (id, option) {
                        $("#InvestorCode").val(option.InvestorCode + '- ' + option.InvestorName);
                        $("#hdnInvestorId").val(option.Id);
                        $("#Currentbalance").val(option.CurrentBalance);
                        $("#InvestorBranch").val(option.BrokerBranchName);
                        $("#thumbnil").attr("src", "/AccPayment/RetrieveImage/" + option.Id + "");
                        $("#thumbnil2").attr("src", "/AccPayment/RetrieveSign/" + option.Id + "");
                        $("#divReq").show();

                        $("#hdnRequisitionId").val(option.RequiditionId);

                        $("#Amount").val(option.Amount);
                        $("#RequisitionInfo").html(option.RequisitionInfo);
                    });
                }

                else {
                    $.alert.open("Error", data.Message);
                }


                //if (InvestorList.length == 1) {
                //    $.each(InvestorList, function (id, option) {
                //        $("#InvestorCode").val(option.InvestorCode + '- ' + option.InvestorName);
                //        $("#hdnInvestorId").val(option.Id);
                //        $("#Currentbalance").val(option.CurrentBalance);
                //        $("#InvestorBranch").val(option.BrokerBranchName);
                //        //
                //        $("#thumbnil").attr("src", "/AccPayment/RetrieveImage/" + option.Id + "");
                //        $("#thumbnil2").attr("src", "/AccPayment/RetrieveSign/" + option.Id + "");
                //        if (option.RequisitionNo != 0) {
                //            $("#divReq").show();
                //            $("#hdnRequisitionId").val(option.RequiditionId);
                //            $("#spReqNo").html(option.RequisitionNo);
                //            $("#spAmount").html(option.Amount);
                //            $("#spReqDate").html(option.RequisitionDate);
                //            $("#Amount").val(option.Amount);
                //        }
                //    });
                //}
                //else {
                //    $.alert.open("info", "Investor not found");
                //}

            },
            failure: function () {
                $.alert.open("error", "Failed!");
            }
        });
    }


    @*var AllInvestorList = [];

    function GetInvestorList() {

        $('#InvestorCode').attr("placeholder","Loading . .. ... ....")
        $.ajax({
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetInvestorList", "AccCollection", "http")',
            type: "GET",
            dataType: "json",
            async: true,
            data: {QType:"0"},
            success: function (InvestorList) {
                $.each(InvestorList, function (id, option) {
                    var obj2 = new Object();
                    obj2.key = option.Id;
                    obj2.value = option.InvestorCode;

                    AllInvestorList[AllInvestorList.length] = obj2;
                });
                $('#InvestorCode').removeAttr("placeholder")
            },
            failure: function () {
                $('#InvestorCode').removeAttr("placeholder")
                $.alert.open("error", "Failed!");
            }
        });

        $('#InvestorCode').autocomplete({
            source: AllInvestorList,
            select: function (event, ui) {
                $("#InvestorCode").val(ui.item.value); // display the selected text
                $("#hdnInvestorId").val(ui.item.key);// save selected id to hidden input
                $("#hdnMode").val("A");
            }
        });

    }*@


    function LoadEditData(Id, InvestorId, InvestorName, TransactionDateMsg, TransactionModeId, ChequeNo, ChequeDateMsg, BankId, BankBranchId, Amount, DocRefNo, PostDateMsg, BrokerBranchId, Remarks, ValuedateMsg, AccountNo, BranchGLAccount, IsAccountPayee, CurrentBalance, InvestorBrokerBranchName, AccId) {
        $("#hdnAccPaymentId").val(Id);
        $("#hdnInvestorId").val(InvestorId);
        $("#TransactionDate").val(TransactionDateMsg);
        $("#InvestorCode").val(InvestorName);
        $("#TransactionMode").val(TransactionModeId);
        $("#ChequeNo").val(ChequeNo);
        $("#ChequeDate").val(ChequeDateMsg);
        $("#ddlBankId").val(BankId);
        $("#ddlBankBranchId").val(BankBranchId);
        $("#Amount").val(Amount);
        $("#DocRefNo").val(DocRefNo);
        $("#PaymentDate").val(PostDateMsg);
        $("#ValueDate").val(ValuedateMsg);
        $("#InvestorBranch").val(InvestorBrokerBranchName);
        $("#Remarks").val(Remarks);
        $("#AccountNo").val(AccountNo);
        $("#Currentbalance").val(CurrentBalance);
        if (IsAccountPayee == true) {
            $("#AccountPayee").prop("checked", true);
        }
        else {
            $("#AccountPayee").prop("checked", false);
        }
        $("#ddlPaymentGLAccount").val(BranchGLAccount);

        if (BankId != 0 && BankId != 'null' && BankId != '' && BankId != null) {
            var acc = BankId + ',' + BankBranchId + ',' + BranchGLAccount + ',' + AccountNo + ',' + AccId
            $("#ddlPaymentGLAccountList").val(acc);
        }
        else {
            $("#ddlBankId").val(0);
            $("#ddlBankBranchId").val(0);
            $("#ddlPaymentGLAccountList").val(0);
        }

        $("#thumbnil").attr("src", "/AccPayment/RetrieveImage/" + InvestorId + "");
        $("#thumbnil2").attr("src", "/AccPayment/RetrieveSign/" + InvestorId + "");

    }


    $(document).ready(function () {

        $("#hdnRequisitionId").val(0);
        $("#hdnAccPaymentId").val("0");
        $("#hdnInvestorId").val("0");
        $("#AccountPayee").prop("checked", true);
        //GetInvestorList();

        GetGLAccountList();

        GetPaymentInfoBeforeApprove();


        $("#InvestorCode").blur(function () {
            if ($("#InvestorCode").val().trim() != "") {
                GetInvestorbyCode();
            }
        });

        $("#btnClear").click(function (e) {
            e.preventDefault();
            $("#hdnAccPaymentId").val("0");
            $("#hdnInvestorId").val('0');
            $("#InvestorCode").val('');
            $("#TransactionMode").val('');
            $("#ChequeNo").val('');
            $("#ChequeDate").val('');
            $("#ddlBankId").val("0");
            $("#ddlBankBranchId").val('');
            $("#Amount").val(0);
            $("#DocRefNo").val('');
            $("#PaymentDate").val('');
            $("#ValueDate").val('');
            $("#InvestorBranch").val("");
            $("#Remarks").val('');
            $("#AccountNo").val('');
            $("#Currentbalance").val(0);
            $("#InvestorCode").focus();
            $("#AccountPayee").prop("checked", true);
            $("#ddlPaymentGLAccountList").val('0');
            $("#HdnAccId").val('');
            $("#thumbnil").removeAttr("src");
            $("#thumbnil2").removeAttr("src");
            $("#hdnRequisitionId").val(0);
            $("#RequisitionInfo").html('');;
        });

        $("#btnSave").click(function (e) {
            e.preventDefault();

            var InvestorId = $("#hdnInvestorId").val();
            var Amount = parseFloat($("#Amount").val());
            var PaymentDate = $("#PaymentDate").val();
            var TransactionDate = $("#TransactionDate").val();
            var TransactionMode = $("#TransactionMode").val();
            var PaymentGLAccount = $("#ddlPaymentGLAccount").val();
            var ChequeNo = $("#ChequeNo").val();
            var ChequeDate = $("#ChequeDate").val();
            var RequiditionId = $("#hdnRequisitionId").val();

            if (InvestorId != "0" && Amount != "" && PaymentDate != "" && TransactionDate != "" && TransactionMode != "" && ChequeNo != "" && ChequeDate != "" && PaymentGLAccount != "") {
                //if( Amount <= parseFloat($("#Currentbalance").val()))
                //{
                var AccPaymentId = $("#hdnAccPaymentId").val();
                var BankId = $("#ddlBankId").val();
                var BankBranchId = $("#ddlBankBranchId").val();
                var DocRefNo = "";
                var ValueDate = $("#ValueDate").val();
               // var BranchId = $("#BrokerBranchList").val();
                var Remarks = $("#Remarks").val();
                var AccountNo = $("#AccountNo").val();
                var AccId = $("#HdnAccId").val();
                var AccountPayee = $("#AccountPayee").is(":checked");

                $.ajax({
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("SaveAccPaymentOfNegativeBalance", "AccPayment", "http")',
                    type: "GET",
                    dataType: "json",
                    async: true,
                    data: { AccPaymentId: AccPaymentId, InvestorId: InvestorId, TransactionDate: TransactionDate, TransactionMode: TransactionMode, ChequeNo: ChequeNo, ChequeDate: ChequeDate, BankId: BankId, BankBranchId: BankBranchId, Amount: Amount, DocRefNo: DocRefNo, PaymentDate: PaymentDate, ValueDate: ValueDate, Remarks: Remarks, AccountNo: AccountNo,AccId:AccId, AccountPayee: AccountPayee, PaymentGLAccount: PaymentGLAccount, RequiditionId: RequiditionId },
                    success: function (Result) {
                        if (Result == "1") {
                            $("#hdnAccPaymentId").val("0");
                            $("#hdnInvestorId").val('0');
                            $("#InvestorCode").val('');
                            $("#TransactionMode").val('');
                            $("#ChequeNo").val('');
                            $("#ChequeDate").val('');
                            $("#ddlBankId").val("0");
                            $("#ddlBankBranchId").val('');
                            $("#Amount").val(0);
                            $("#DocRefNo").val('');
                            $("#PaymentDate").val('');
                            $("#ValueDate").val('');
                            $("#InvestorBranch").val("");
                            $("#Remarks").val('');
                            $("#AccountNo").val('');
                            $("#Currentbalance").val(0);
                            $("#InvestorCode").focus();
                            $("#AccountPayee").prop("checked", true);
                            $("#ddlPaymentGLAccountList").val('0');
                            $("#HdnAccId").val('');
                            $("#thumbnil").removeAttr("src");
                            $("#thumbnil2").removeAttr("src");
                            $("#hdnRequisitionId").val(0);
                            $("#RequisitionInfo").html('');
                            
                            GetPaymentInfoBeforeApprove();
                            $(".success").show(800).fadeToggle(3000);
                        }
                        else {
                            $.alert.open("error", Result)
                        }

                    },
                    failure: function () {
                        $(".failed").show(800).fadeToggle(3000);
                    }
                });
                //}
                //else{
                //    $.alert.open("error", "Not enough balance");
                //    $("#Amount").val(0);
                //}

            }
            else {
                $.alert.open("error", "Insert all required field")
            }
        });

        //ddlBankId   ddlBankBranchId
        // ddlPaymentGLAccountList
        $("#ddlPaymentGLAccountList").change(function () {

            if ($("#ddlPaymentGLAccountList").val() != "0") {
                var gl = $("#ddlPaymentGLAccountList").val().split(",");
                $("#ddlBankId").val(gl[0]);
                $("#ddlBankBranchId").val(gl[1]);
                $("#ddlPaymentGLAccount").val(gl[2]);
                $("#AccountNo").val(gl[3]);
                $("#HdnAccId").val(gl[4]);
            }
            else {
                $("#ddlBankId").val('');
                $("#ddlBankBranchId").val('');
                $("#ddlPaymentGLAccount").val('');
                $("#AccountNo").val('');
                $("#HdnAccId").val('');
            }
        });

        $("#ddlBankId").change(function () { if ($("#ddlBankId").val() != "" && $("#ddlBankId").val() != null) { GetBankBranchList(); } });


        //$("#Amount").keyup(function () {

        //    var Amount = parseFloat($("#Amount").val() == '' ? 0 : $("#Amount").val());
        //    var Currentbalance = parseFloat($("#Currentbalance").val() == '' ? 0 : $("#Currentbalance").val());

        //    if (Amount > Currentbalance)
        //    {
        //        $.alert.open("error", "Not enough balance");
        //        $("#Amount").val(0);
        //    }
        //});


        //$("#TransactionMode").change(function () {
        //    if($("#TransactionMode").val() == "CS")
        //    {
        //        $("#ChequeNo").val("");
        //        $("#ChequeDate").val("");
        //        $("#ddlBankId").val("0");
        //        $("#ddlBankBranchId").val("");

        //        $("#ChequeNo").attr("disabled", true);
        //        $("#ChequeDate").attr("disabled", true);
        //        $("#ddlBankId").attr("disabled", true);
        //        $("#ddlBankBranchId").attr("disabled", true);

        //    }
        //    else
        //    {
        //        $("#ChequeNo").attr("disabled", false);
        //        $("#ChequeDate").attr("disabled", false);
        //        $("#ddlBankId").attr("disabled", false);
        //        $("#ddlBankBranchId").attr("disabled", false);

        //    }
        //});


        //  $("#ChequeDate").datepicker(
        //{
        //    dateFormat: "dd-M-yy",
        //    showAnim: "scale",
        //    changeMonth: true,
        //    changeYear: true,
        //    yearRange: "1920:2025"
        //});

        //$("#TransactionDate").datepicker(
        //{
        //    dateFormat: "dd-M-yy",
        //    showAnim: "scale",
        //    changeMonth: true,
        //    changeYear: true,
        //    yearRange: "1920:2025"
        //});


        //$("#PaymentDate").datepicker(
        //{
        //    dateFormat: "dd-M-yy",
        //    showAnim: "scale",
        //    changeMonth: true,
        //    changeYear: true,
        //    yearRange: "1920:2025"
        //});

        //$("#ValueDate").datepicker(
        //{
        //    dateFormat: "dd-M-yy",
        //    showAnim: "scale",
        //    changeMonth: true,
        //    changeYear: true,
        //    yearRange: "1920:2025"
        //});

    });
</script>
@using (Html.BeginForm("Index", "AccPayment", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal form-label-left", id = "AccPaymentForm" }))
{
    @Html.AntiForgeryToken()
    <div class="page-title">
        <div class="title_left PageHeader" style="width:90%;">
            <h3 style="color: white;padding:2px">&nbsp;&nbsp;&nbsp;Negative Balance Payment</h3>
        </div>
    </div>
    <div class="clearfix"></div>
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <div class="clearfix"></div>
                    <input type="hidden" id="hdnMode" />
                    <input type="hidden" id="hdnInvestorId" />
                    <input type="hidden" id="hdnAccPaymentId" />
                    <input type="hidden" id="ddlBankId" />
                    <input type="hidden" id="ddlBankBranchId" />
                    <input type="hidden" id="ddlPaymentGLAccount" />
                    <input type="hidden" id="AccountNo" />
                    <input type="hidden" id="HdnAccId" />
                    <input type="hidden" id="hdnRequisitionId" /> 
                </div>
                <div class="x_content">
                    <br />

                    <div class="row form-group">
                        @Html.Label("Transaction Date", htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.Editor("TransactionDate", new { htmlAttributes = new { @class = "form-control  DateInput check-date", @Value = @ViewData["BusinessDate"], @disabled = "disabled" } })@*, @onkeypress="return checkNumberic(event);"*@
                        </div>
                        @Html.Label("Investor Code", htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.Editor("InvestorCode", new { htmlAttributes = new { @class = "form-control", @required = "required", @autofocus = "autofocus" } })
                        </div>
                    </div>
                    <div class="row form-group">
                        @Html.Label("Current Balance", htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.Editor("Currentbalance", new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>

                        @Html.Label("Investor Branch", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.Editor("InvestorBranch", new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>

                    </div>
                    <div class="row form-group">
                        @Html.Label("Transaction Mode", htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.DropDownList("TransactionMode", new SelectList(ViewBag.TransactionModeList, "Id", "TransactionModeName"), new { @class = "form-control bordercss" })
                        </div>
                        @Html.Label("Payment GL Account", htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.DropDownList("PaymentGLAccountList", null, new { @id = "ddlPaymentGLAccountList", @class = "form-control bordercss" })
                        </div>
                      

                    </div>
                    <div class="row form-group">
                        @Html.Label("Cheque No", htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.Editor("ChequeNo", new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.Label("Cheque Date", htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.Editor("ChequeDate", new { htmlAttributes = new { @class = "form-control  DateInput check-date" } })
                        </div>
                       
                    </div>
                    <div class="row form-group">
                        @*@Html.Label("Broker Branch", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.DropDownList("BrokerBranchList", new SelectList(ViewBag.BrokerBranchList, "Id", "BrokerBranchName"), "Please select", new { @class = "form-control bordercss" })
                        </div>*@
                        @Html.Label("Amount", htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.Editor("Amount", new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                        </div>

                        @Html.Label("Value Date", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.Editor("ValueDate", new { htmlAttributes = new { @class = "form-control  DateInput check-date" } })
                        </div>

                    </div>
                    <div class="row form-group">
                        @Html.Label("Payment Date", htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.Editor("PaymentDate", new { htmlAttributes = new { @class = "form-control  DateInput check-date" } })
                        </div>
                        @Html.Label("Remarks", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.TextArea("Remarks", htmlAttributes: new { @class = "form-control", @rows = "3" })
                        </div>
                    </div>
                    <div class="row form-group">
                        @Html.Label("Account Payee", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-1 col-sm-6 col-xs-12">
                            @Html.CheckBox("AccountPayee", new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <div class="col-md-3 col-sm-6 col-xs-12">
                            <img id="thumbnil" style="width:100px; height:100px;float:left" alt="Image" class="img-responsive" />
                            <img id="thumbnil2" style="width: 100px; height: 100px; float: left; padding-left: 4px" alt="Signature" class="img-responsive" />
                        </div>
                        <div id="divReq" style="display:none">
                            @*@Html.Label("Requisition", htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-1 col-sm-6 col-xs-12">
                            </div>
                            <div class="col-md-5 col-sm-6 col-xs-12">
                                <label id="RequisitionInfo"></label>
                                @*<label>Requisition No : &nbsp;&nbsp;<span id="spReqNo"></span> &nbsp;&nbsp;Date :<span id="spReqDate"></span>  &nbsp;&nbsp;Amount : <span id="spAmount"></span></label>*@
                            </div>
                        </div>
                    </div>
                    <div class="ln_solid"></div>
                    <div class="form-group">
                        <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
                            <button type="submit" id="btnSave" class="btn btn-success">Save</button>
                            <button type="submit" id="btnClear" class="btn btn-primary">New</button>
                        </div>
                    </div>
                    <div class="item form-group">
                        <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
                            <div class="success" role="alert" style="display:none">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                <p class="message-content">Saved Sucessfully</p>
                            </div>
                            <div class="failed" role="alert" style="display:none">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                <p class="message-content">Fail to save</p>
                            </div>
                            <br />
                        </div>
                    </div>
                    @*</form>*@
                </div>
                <div class="x_content">
                    <div class="row">
                        <div id="grid"> </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
