@using Common.Data.CommonDataModel
@{
    ViewBag.Title = "Generate Limit Files";
    Layout = "~/Views/Shared/_LayoutUcasportfolio.cshtml";
    var businessDay = (DateTime)ViewBag.BusinessDate;
    var reports = (List<ReportInformation>)ViewBag.Reports;
    var fileLocation = (string)ViewBag.FileLocation;
    var excellLimitFileLocation = (string)ViewBag.ExcellLimitFileLocation;
}
<style type="text/css">
    .panel-custom > .panel-heading {
        /*background: #26B99A !important;*/
        color: #FFFFFF !important;
    }

    .panel-custom .panel-body .row:not(:last-child) {
        margin-bottom: 10px;
    }

    .panel-custom .panel-body .radio {
        margin-top: 0px;
    }

    .panel-custom .panel-body .radio-text, .panel-custom .panel-body input[type=text] {
        color: #73879C;
    }

    .panel-custom .label-container {
        text-align: right;
    }

    input[type=text]:read-only {
        background: #FFFFFF;
        cursor: default;
    }

    #error > .panel {
        margin-bottom: 20px;
    }

        #error > .panel > .panel-heading {
            padding: 0px 5px 0px 15px;
        }

    .radio-container label {
        cursor: pointer;
        padding: 5px;
    }

        .radio-container label.active {
            background: #0e73a9;
            border-radius: 4px;
            /*margin-left: 10px;*/
        }

            .radio-container label.active span.radio-text {
                color: #FFFFFF;
            }

    .loader {
        border: 16px solid #1ABB9C;
        border-radius: 50%;
        border-top: 16px solid #3498db;
        width: 120px;
        height: 120px;
        -webkit-animation: spin 2s linear infinite;
        animation: spin 2s linear infinite;
        position: absolute;
        top: 40%;
        left: 40%;
    }

    @@-webkit-keyframes spin {
        0% {
            -webkit-transform: rotate(0deg);
        }

        100% {
            -webkit-transform: rotate(360deg);
        }
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }
</style>
<div class="row">
    <div class="col-sm-offset-1 col-sm-10">
        <div class="panel panel-success panel-custom">
            <div class="panel-heading PageHeader">
                <h3 class="panel-title">Generate Limit Files</h3>
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-sm-2 label-container">
                        @Html.Label("File Name :", new { @class = "control-label" })
                    </div>
                    <div class="col-sm-10 radio-container">
                        <div class="row">
                            @for (var r = 0; r < reports.Count; r++)
                            {
                                <label class="col-sm-4 @(r==0?"active":"")">
                                    <input type="radio" class="radio radio-inline" @(r == 0 ? "checked='checked'" : "") name="fileType" value="@reports[r].SerialNo" /> <span class="radio-text">@reports[r].ReportName</span>
                                </label>
                            }
                        </div>
                    </div>
                </div>
                <div class="row" id="divBalanceType">
                    <div class="col-sm-2 label-container">
                        @Html.Label("Balance Type :", new { @class = "control-label" })
                    </div>
                    <div class="col-sm-10 radio-container">
                        <div class="row">
                            <label class="col-sm-5">
                                <input type="radio" class="radio radio-inline" name="balanceType" value="0" checked="checked" /> <span class="radio-text">Ledger Balance</span>
                            </label>
                            <label class="col-sm-7">
                                <input type="radio" class="radio radio-inline" name="balanceType" value="1" /> <span class="radio-text">Available Balance <span style="color: green; font-size: 10px;">(Ledger Balance - Unclear Balance - Immatured Balance)</span></span>
                            </label>
                            <label class="col-sm-5">
                                <input type="radio" class="radio radio-inline" name="balanceType" value="2" /> <span class="radio-text">Ledger Balance - Immatured Balance</span>
                            </label>
                            <label class="col-sm-7">
                                <input type="radio" class="radio radio-inline" name="balanceType" value="3" /> <span class="radio-text">Ledger Balance - Unclear Balance</span>
                            </label>
                        </div>
                    </div>
                </div>
                <div class="row" id="divBalanceType">
                    <div class="col-sm-2 label-container">
                        @Html.Label("From Excell :", new { @class = "control-label" })
                    </div>
                    <div class="col-sm-10 radio-container">
                        <div class="row">
                            <label class="col-sm-4">
                                <input type="checkbox" class="checkbox checkbox-inline" name="fromExcell" id="chkFromExcell" value="1" /> <span class="radio-text">Yes</span>
                            </label>
                        </div>
                    </div>
                </div>
                <div class="row" id="divExcellFile" style="display: none;">
                    <div class="col-sm-2 label-container">
                        @Html.Label("Excell File Location :", new { @class = "control-label" })
                    </div>
                    <div class="col-sm-4">
                        <input type="text" class="form-control input-sm" id="txtExcellFileLocation" readonly="readonly" disabled="disabled" value="@excellLimitFileLocation" />
                    </div>
                    <div class="col-sm-4">
                        <a href="/Content/demoFiles/Manual Code and limit.xlsx" class="btn-link">Demo File</a>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-2 label-container">
                        @Html.Label("Generate File Location :", new { @class = "control-label" })
                    </div>
                    <div class="col-sm-4">
                        <input type="text" class="form-control input-sm" id="txtFileLocation" readonly="readonly" disabled="disabled" value="@fileLocation" />
                    </div>
                </div>
            </div>
            <div class="panel-footer">
                <div class="row">
                    <div class="col-sm-offset-2 col-sm-10">
                        <input type="submit" name="btnGenerate" id="btnGenerate" class="btn btn-sm btn-success" value="Generate" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="loader" id="divLoader" style="display: none;"></div>
<script type="text/javascript" src="~/Scripts/jquery.maskedinput-1.3.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("input[type=radio][name=fileType]").on("change", function () {
            $(".radio-container label").removeClass("active");
            $("input[type=radio][name=fileType]:checked").parents("label").addClass("active");
            var reportNo = parseInt($("input[type=radio][name=fileType]:checked").val());
            if (reportNo == 1 || reportNo == 3) {
                $("#divBalanceType").show();
            } else {
                $("#divBalanceType").hide();
            }
        });
        $("#chkFromExcell").on("change", function () {
            $("#divExcellFile").hide();
            if ($(this).is(":checked")) {
                $("#divExcellFile").show();
            }
        });
        $(document).on("click", "#btnGenerate", function () {
            if ($("input[type=radio][name=fileType]:checked").length == 0) {
                $.alert.open("Warning!", "No file name selected.");
                return false;
            }
            var reportNo = parseInt($("input[type=radio][name=fileType]:checked").val());
            var balanceType = parseInt($("input[type=radio][name=balanceType]:checked").val());
            var fromExcell = $("#chkFromExcell").is(":checked") ? 1 : 0;
            var url = '@Url.Action("ExportLimitFile", "FileGeneration")';
            $("#divLoader").show();
            $("body").css("pointer-events", "none");
            var jsonData = { type: reportNo, balanceType: balanceType, fromExcell: fromExcell };
            $.ajax({
                type: "Post",
                url: url,
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(jsonData),
                dataType: "json",
                success: function (data) {
                    //if (data == true) {
                    $("body").css("pointer-events", "");
                    $("#divLoader").hide();
                    $.alert.open(data.Status, data.Message);
                    //}
                },
            });
            return true;
        });
    });
</script>