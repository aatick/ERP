@model ERP.Web.ViewModels.BrokerTraderViewModel
@{
    ViewBag.Title = "BrokerTraderEdit";
    Layout = "~/Views/Shared/_LayoutUcasportfolio.cshtml";
    var EmployeeList = Model == null ? null : Model.EmployeeList;
    var MarketList = Model == null ? null : Model.MarketList;
    var BrokerBranchList = Model == null ? null : Model.BrokerBranchList;
}


<style>
    .required::after {
        content: " *";
        color: red;
    }

    .bordercss {
        border: 3px double #CCCCCC;
        color: black;
    }

        .bordercss:focus {
            box-shadow: 0 0 5px rgba(81, 203, 238, 1);
            border: 2px solid rgba(81, 203, 238, 1);
        }
</style>

<script type="text/javascript">

    $(document).ready(function () {

        $('#btnSave').click(function (e) {

            e.preventDefault();
            if (!validator.checkAll($('form'))) {
                return false;
            }
            else {

                $('#BrokerTraderForm').ajaxSubmit({
                    type: "POST",
                    target: '#thumbnil',
                    data: {},
                    dataType: 'json',
                    resetForm: true,
                    success: function (data) {
                        if (data.data.Id > 0) {

                            $(".success").show(800).fadeToggle(3000);
                        }
                        else {
                            $(".failed").show(800).fadeToggle(3000);
                        }
                    },
                    error: function () {
                        $("#dialog-message").html('<p>Error, Fail to Save.</p>');
                        $("#dialog-message").dialog({
                            modal: true,
                            buttons: {
                                Ok: function () {
                                    $(this).dialog("close");
                                }
                            }
                        });
                    }
                });
            }
        });




    });

</script>


@Html.ActionLink("Back To List", "BrokerTraderList", null, new { @class = "btn btn-primary btn-sm pull-right" })

@using (Html.BeginForm("BrokerTraderEdit", "Broker", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal form-label-left", id = "BrokerTraderForm" }))
{
    @Html.AntiForgeryToken()

    <div class="page-title">
        <div class="title_left PageHeader" style="width:90%;">
            <h3 style="color: white;padding:2px">Broker trader edit</h3>
        </div>
    </div>
    <div class="clearfix"></div>
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    <br />
                    <div class="row form-group">
                        @Html.Label("Branch", htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.DropDownListFor(model => model.BrokerBranchId, BrokerBranchList, new { @ID = "ddlBrokerBranchId", @class = "form-control bordercss", @required = "required" })
                            @Html.HiddenFor(model => model.Id)
                        </div>
                        @Html.Label("Market", htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.DropDownListFor(model => model.MarketId, MarketList, new { @ID = "ddlBranchId", @class = "form-control bordercss", @required = "required" })
                        </div>
                    </div>
                    <div class="row form-group">
                        @Html.Label("Employee", htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.DropDownListFor(model => model.EmployeeId, EmployeeList, new { @ID = "ddlDesignationId", @class = "form-control bordercss", @required = "required" })
                        </div>
                        @Html.Label("Trader Code", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.EditorFor(model => model.TraderCode, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="row form-group">
                        @Html.Label("PC No", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.EditorFor(model => model.PCNo, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.Label("Valid From", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            <input type="datetime" data-hid="hidValidFrom" class="form-control DateInput check-date" id="ValidFrom" name="txtValidFrom" value="@(Model.ValidFrom.HasValue?Model.ValidFrom.Value.ToString("dd/MM/yyyy"):"")" />
                            <input type="hidden" id="hidValidFrom" name="ValidFrom" value="@(Model.ValidFrom.HasValue?Model.ValidFrom.Value.ToString("dd-MMM-yyyy"):"")" />
                            @*@Html.EditorFor(model => model.ValidFrom, new { htmlAttributes = new { @class = "form-control DateInput" } })*@
                        </div>
                    </div>
                    <div class="row form-group">
                        @Html.Label("Valid To", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            <input type="datetime" data-hid="hidValidTo" class="form-control DateInput check-date" id="ValidTo" name="txtValidTo" value="@(Model.ValidTo.HasValue?Model.ValidTo.Value.ToString("dd/MM/yyyy"):"")" />
                            <input type="hidden" id="hidValidTo" name="ValidTo" value="@(Model.ValidTo.HasValue?Model.ValidTo.Value.ToString("dd-MMM-yyyy"):"")" />
 />
                            @*@Html.EditorFor(model => model.ValidTo, new { htmlAttributes = new { @class = "form-control DateInput" } })*@
                        </div>
                    </div>
                    <div class="ln_solid"></div>
                    <div class="form-group">
                        <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
                            <button type="submit" id="btnSave" class="btn btn-success">Save</button>
                        </div>
                    </div>
                    <div class="item form-group">
                        <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
                            <div class="success" role="alert" style="display:none">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                <p class="message-content">Saved Sucessfully</p>
                            </div>
                            <div class="failed" role="alert" style="display:none">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                <p class="message-content">Fail to save</p>
                            </div>
                            <br />
                        </div>
                    </div>
                    @*</form>*@
                </div>
            </div>
        </div>
    </div>
}


