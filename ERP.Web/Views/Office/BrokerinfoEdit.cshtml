@model ERP.Web.ViewModels.BrokerInfoViewModel

@{
    ViewBag.Title = "BrokerinfoEdit";
    Layout = "~/Views/Shared/_LayoutUcasportfolio.cshtml";
    var BrokerTypeList = Model == null ? null : Model.BrokerTypeList;
    var BrokerDepositoryList = Model == null ? null : Model.BrokerDepositoryList;
    var MarketList = Model == null ? null : Model.MarketList;

}


<style>
    .required::after {
        content: " *";
        color: red;
    }
</style>

<script type="text/javascript">

    $(document).ready(function () {

        $('#btnSave').click(function (e) {

            e.preventDefault();
            //if (!validator.checkAll($('form'))) {
            //    return false;
            //}
            //else {
            //    $('#AjaxLoader').show();

            // alert("1");

            $('#BrokerInfoForm').ajaxSubmit({
                type: "POST",
                target: '#thumbnil',
                data: {},
                dataType: 'json',
                resetForm: true,
                success: function (data) {
                    if (data.data.Id > 0) {
                        $.alert.open('info', 'Save successfull', function (button) {
                            window.location.href = '/Office/BrokerList';
                        });
                        //$(".success").show(800).fadeToggle(3000);
                    }
                    else {
                        $(".failed").show(800).fadeToggle(3000);
                    }
                },
                error: function () {
                    $("#dialog-message").html('<p>Error, Fail to Save.</p>');
                    $("#dialog-message").dialog({
                        modal: true,
                        buttons: {
                            Ok: function () {
                                $(this).dialog("close");
                            }
                        }
                    });
                }
            });
            // }
        });
    });

</script>


@Html.ActionLink("Back To List", "BrokerList", null, new { @class = "btn btn-primary btn-sm pull-right" })

@using (Html.BeginForm("BrokerinfoEdit", "Office", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal form-label-left", id = "BrokerInfoForm" }))
{
    @Html.AntiForgeryToken()
    <div class="page-title">
        <div class="title_left PageHeader" style="width:90%;">
            <h3 style="color: white;padding:2px">Broker info edit</h3>
        </div>
    </div>
    <div class="clearfix"></div>
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_content">
                    <div class="row form-group">
                        @Html.Label("Broker Code", htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.EditorFor(model => model.BrokerCode, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.HiddenFor(model => model.Id)
                        </div>
                        @Html.Label("Name", htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.EditorFor(model => model.BrokerName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        </div>
                    </div>
                    <div class="row form-group">
                        @Html.Label("Short Name", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.EditorFor(model => model.BrokerShortName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.Label("Registration No", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.EditorFor(model => model.RegistrationNo, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="row form-group">
                        @Html.Label("Total Trader", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.EditorFor(model => model.TotalTrader, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return checkNumeric(event);" } })
                        </div>
                        @Html.Label("Free Limit", htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.EditorFor(model => model.FreeLimit, new { htmlAttributes = new { @class = "form-control", @required = "required", @onkeypress = "return checkNumeric(event);" } })
                        </div>
                    </div>
                    <div class="row form-group">
                        @Html.Label("Auth Capital", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.EditorFor(model => model.AuthCapital, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return checkNumeric(event);" } })
                        </div>
                        @Html.Label("Paid Up Capital", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.EditorFor(model => model.PaidUpCapital, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return checkNumeric(event);" } })
                        </div>
                    </div>
                    <div class="row form-group">
                        @Html.Label("Issue Date", htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            <input type="datetime" data-hid="hidIssueDate" class="form-control DateInput check-date" id="IssueDate" name="txtIssueDate" value="@(Model.IssueDate.HasValue?Model.IssueDate.Value.ToString("dd/MM/yyyy"):"")" />
                            <input type="hidden" id="hidIssueDate" name="IssueDate" value="@(Model.IssueDate.HasValue?Model.IssueDate.Value.ToString("dd-MMM-yyyy"):"")" />
                        </div>
                        @Html.Label("Deposit Mode", htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.EditorFor(model => model.DepositMode, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        </div>
                    </div>
                    <div class="row form-group">
                        @Html.Label("Is Owner", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            @Html.CheckBoxFor(model => model.IsOwner, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="ln_solid"></div>
                    <div class="form-group">
                        <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
                            <button type="submit" id="btnSave" class="btn btn-success">Save</button>
                        </div>
                    </div>
                    <div class="item form-group">
                        <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
                            <div class="success" role="alert" style="display:none">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                <p class="message-content">Saved Sucessfully</p>
                            </div>
                            <div class="failed" role="alert" style="display:none">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                <p class="message-content">Fail to save</p>
                            </div>
                            <br />

                        </div>
                    </div>
                    @*</form>*@
                </div>
            </div>
        </div>
    </div>
}



